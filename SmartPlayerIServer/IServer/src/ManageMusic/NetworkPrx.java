// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `manageMusic.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package ManageMusic;

public interface NetworkPrx extends Ice.ObjectPrx
{
    public int inscription(String name);

    public int inscription(String name, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_inscription(String name);

    public Ice.AsyncResult begin_inscription(String name, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_inscription(String name, Ice.Callback __cb);

    public Ice.AsyncResult begin_inscription(String name, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_inscription(String name, Callback_Network_inscription __cb);

    public Ice.AsyncResult begin_inscription(String name, java.util.Map<String, String> __ctx, Callback_Network_inscription __cb);

    public Ice.AsyncResult begin_inscription(String name, 
                                             IceInternal.Functional_IntCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_inscription(String name, 
                                             IceInternal.Functional_IntCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_inscription(String name, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_IntCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_inscription(String name, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_IntCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public int end_inscription(Ice.AsyncResult __result);

    public void changeIp(String ip, int id);

    public void changeIp(String ip, int id, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_changeIp(String ip, int id);

    public Ice.AsyncResult begin_changeIp(String ip, int id, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_changeIp(String ip, int id, Ice.Callback __cb);

    public Ice.AsyncResult begin_changeIp(String ip, int id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_changeIp(String ip, int id, Callback_Network_changeIp __cb);

    public Ice.AsyncResult begin_changeIp(String ip, int id, java.util.Map<String, String> __ctx, Callback_Network_changeIp __cb);

    public Ice.AsyncResult begin_changeIp(String ip, 
                                          int id, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_changeIp(String ip, 
                                          int id, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_changeIp(String ip, 
                                          int id, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_changeIp(String ip, 
                                          int id, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    public void end_changeIp(Ice.AsyncResult __result);

    public void deconnexion(int id);

    public void deconnexion(int id, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deconnexion(int id);

    public Ice.AsyncResult begin_deconnexion(int id, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_deconnexion(int id, Ice.Callback __cb);

    public Ice.AsyncResult begin_deconnexion(int id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_deconnexion(int id, Callback_Network_deconnexion __cb);

    public Ice.AsyncResult begin_deconnexion(int id, java.util.Map<String, String> __ctx, Callback_Network_deconnexion __cb);

    public Ice.AsyncResult begin_deconnexion(int id, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_deconnexion(int id, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_deconnexion(int id, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_deconnexion(int id, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_VoidCallback __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb);

    public void end_deconnexion(Ice.AsyncResult __result);

    public void connexion(String ip, int id);

    public void connexion(String ip, int id, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_connexion(String ip, int id);

    public Ice.AsyncResult begin_connexion(String ip, int id, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_connexion(String ip, int id, Ice.Callback __cb);

    public Ice.AsyncResult begin_connexion(String ip, int id, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_connexion(String ip, int id, Callback_Network_connexion __cb);

    public Ice.AsyncResult begin_connexion(String ip, int id, java.util.Map<String, String> __ctx, Callback_Network_connexion __cb);

    public Ice.AsyncResult begin_connexion(String ip, 
                                           int id, 
                                           IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_connexion(String ip, 
                                           int id, 
                                           IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_connexion(String ip, 
                                           int id, 
                                           java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_connexion(String ip, 
                                           int id, 
                                           java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb);

    public void end_connexion(Ice.AsyncResult __result);
}

package Entity;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;

import DBControl.DBConnection;

public class Sound  extends ManageMusic.Sound{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int id;
	private String url;
	private int idServer;
	
	
	public Sound(int id,String titre,String artiste, String album, String cover,String url,int idServer)
	{
		this.setId(id);
		this.titre = titre;
		this.artist = artiste;
		this.album = album;
		this.cover = cover;
		this.setUrl(url);
		this.idServer = idServer;
	}
	
	public String getTitre() {
		return titre;
	}
	public void setTitre(String titre) {
		this.titre = titre;
	}
	public String getArtiste() {
		return artiste;
	}
	public void setArtiste(String artiste) {
		this.artiste = artiste;
	}
	public String getAlbum() {
		return album;
	}
	public void setAlbum(String album) {
		this.album = album;
	}
	public String getCover() {
		return cover;
	}
	public void setCover(String cover) {
		this.cover = cover;
	}
	public int getIdServer() {
		return idServer;
	}
	public void setIdServer(int idServer) {
		this.idServer = idServer;
	}
	
	
	public Sound getSoundById(int id) throws ClassNotFoundException, SQLException
	{
	     Connection c = DBConnection.getDBConnection().getConnection();
	     c.setAutoCommit(false);
	     Statement stmt = c.createStatement();
	      ResultSet rs = stmt.executeQuery( "SELECT * FROM sound WHERE id="+id+";" );
	      Sound s = null;
	      while ( rs.next() ) {

	         s = new Sound(rs.getInt("id"),rs.getString("titre"),rs.getString("artiste"),rs.getString("album"),rs.getString("cover"),rs.getString("url"),rs.getInt("idServer"));
	      }
	      rs.close();
	      stmt.close();
	      c.close();
	      return s;
	}
	
	public HashMap<Integer,Sound> getAllSounds() throws ClassNotFoundException, SQLException
	{
	     Connection c = DBConnection.getDBConnection().getConnection();
	     HashMap<Integer,Sound> sounds = new HashMap<Integer,Sound>();
	     Statement stmt = c.createStatement();
	      ResultSet rs = stmt.executeQuery( "SELECT * FROM server ;" );
	      while ( rs.next() ) {
	    	  
	         sounds.put( rs.getInt("id"), new Sound(rs.getInt("id"),rs.getString("titre"),rs.getString("artiste"),rs.getString("album"),rs.getString("cover"),rs.getString("url"),rs.getInt("idServer")) );
	      }
	      rs.close();
	      stmt.close();
	      c.close();
	      return sounds;
	}
	
	public HashMap<Integer,Sound> getSoundsByServer(int id) throws ClassNotFoundException, SQLException
	{
	     Connection c = DBConnection.getDBConnection().getConnection();
	     HashMap<Integer,Sound> sounds = new HashMap<Integer,Sound>();
	     Statement stmt = c.createStatement();
	      ResultSet rs = stmt.executeQuery( "SELECT * FROM server WHERE id="+id+" ;" );
	      while ( rs.next() ) {
	    	  
	         sounds.put( rs.getInt("id"), new Sound(rs.getInt("id"),rs.getString("titre"),rs.getString("artiste"),rs.getString("album"),rs.getString("cover"),rs.getString("url"),rs.getInt("idServer")) );
	      }
	      rs.close();
	      stmt.close();
	      c.close();
	      return sounds;
	}
	public void addNewSound(Sound sound) throws SQLException, ClassNotFoundException
	{
		Connection c = DBConnection.getDBConnection().getConnection();
		 c.setAutoCommit(false);
	      System.out.println("Opened database successfully");

	      Statement stmt = c.createStatement();
	      String sql = "INSERT INTO server (id,titre,artiste,album,cover,url,idServer) " +
	                   "VALUES ("+ sound.getId()+ ", '"+sound.getTitre()+"','"+sound.getArtiste()+"','"+sound.getAlbum()+"','"+sound.getCover()+"','"+sound.getUrl()+"',"+sound.getIdServer()+" );"; 

	      stmt.executeUpdate(sql);
	      stmt.close();
	      c.commit();
	      c.close();
	}
	
	public void update(Sound sound) throws SQLException, ClassNotFoundException
	{
		Connection c = DBConnection.getDBConnection().getConnection();
		 c.setAutoCommit(false);

	      Statement stmt = c.createStatement();
	      String sql = "UPDATE sound set titre= '"+sound.getTitre()+"' artiste='"+sound.getArtiste()+"'" +
	    		  		"' album='"+sound.getAlbum()+"'"+"' cover='"+sound.getCover()+"'"+"' url='"+sound.getUrl()+"'"+
	                   "where id="+sound.id+" );"; 

	      stmt.executeUpdate(sql);
	      stmt.close();
	      c.commit();
	      c.close();
	}
	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}
}
